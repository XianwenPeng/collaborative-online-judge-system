{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<!--<app-problem-list></app-problem-list>-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { DataService } from \"./services/data.service\";\nimport { AuthService } from \"./services/auth.service\";\n\nimport { AppRoutingModule } from './/app.routing.module';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  },{\n    provide: \"auth\",\n    useClass: AuthService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from \"@angular/router\";\nimport { ProblemListComponent } from \"./components/problem-list/problem-list.component\";\nimport { ProblemDetailComponent } from \"./components/problem-detail/problem-detail.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'problems'\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <form class=\\\"navbar-nav mr-auto\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n    </form>\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\n      <li>\\n        <form class=\\\"navbar-form\\\">\\n          <button type=\\\"buttong\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Sign in</button>\\n        </form>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n       <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n         {{username}}\\n       </a>\\n       <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n         <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Profile</a>\\n         <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favorites</a>\\n         <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submissions</a>\\n         <div class=\\\"dropdown-divider\\\"></div>\\n         <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Log out</a>\\n       </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title = \"COJ\";\n\n  username = \"\";\n\n  constructor(@Inject('auth') private auth,\n              // @Inject('data') private data,\n              // @Inject('auth') private auth,\n              // private router : Router\n            ) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.auth.login();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemTitle\\\">Problem Title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemTitle\\\" name=\\\"problemTitle\\\" placeholder=\\\"Enter Problem Title\\\"\\n      required [(ngModel)]=\\\"newProblem.title\\\" #problemTitle=\\\"ngModel\\\">\\n      <!-- <div [hidden]=\\\"problemTitle.valid || problemTitle.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Problem Title is required\\n      </div> -->\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\" name=\\\"problemDesc\\\"\\n      required placeholder=\\\"Enter Problem Description\\\" required [(ngModel)]=\\\"newProblem.desc\\\" #problemDesc=\\\"ngModel\\\"></textarea>\\n      <!-- <div [hidden]=\\\"problemDesc.valid || problemDesc.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Problem Description is required\\n      </div> -->\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n      name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\" >\\n        <option value=\\\"\\\" disabled selected>Select Difficulty</option>\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">\\n          Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\n\nconst DEFAULT_PROBLEM : Problem = Object.freeze({\n  id: 0,\n  title: \"\",\n  desc: \"\",\n  difficulty: \"\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n    this.data.addProblem(this.newProblem)\n            .catch(error => console.log(error.body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.title}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br/>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      this.data.getProblem(+params[\"id\"])\n      .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\"","module.exports = \"<div class = \\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class = \\\"list-group\\\">\\n    <a class = \\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" routerLink=\\\"/problems/{{problem.id}}\\\">\\n      <span class = \\\"{{'pull-left badge label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class = \\\"title\\\">{{problem.id}}. {{problem.title}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                            .subscribe(problems => this.problems = problems);\n  }\n}\n","// src/app/auth/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n\n  auth0 = new auth0.WebAuth({\n    clientID: '20G9VTTb0sO74fNSKKXjecoJk5IeENgJ',\n    domain: 'co-oj.auth0.com',\n    responseType: 'token id_token',\n    audience: 'https://co-oj.auth0.com/userinfo',\n    redirectUri: 'http://localhost:3000/callback',\n    scope: 'openid'\n  });\n\n  constructor(public router: Router) {}\n\n  public login(): void {\n    this.auth0.authorize();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { PROBLEMS } from '../mock-problems';\nimport { Http, Response, Headers } from '@angular/http';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: HttpClient) { }\n\n  parseToProblems(res) {\n\n  }\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get(`/api/v1/problems`)\n    .toPromise()\n    .then((res: Response) => {\n      this.problemsSource.next(JSON.parse(JSON.stringify(res)));\n    })\n    .catch(this.handleError);\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n    .toPromise()\n    .then((res: Response) => {\n      return JSON.parse(JSON.stringify(res));\n    })\n    .catch(this.handleError);\n  }\n\n\n  addProblem(problem: Problem): Promise<Problem> {\n    const httpOptions = {\n       headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n      })\n    };\n    // const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    return this.http.post(`/api/v1/problems`, problem, httpOptions)\n    .toPromise()\n    .then((res: Response) => {\n      this.getProblems();\n      return JSON.parse(JSON.stringify(res));\n    })\n    .catch(this.handleError);\n  }\n\n  GetHttpHeaders() : HttpHeaders {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return headers;\n  }\n\n  private handleError(error: any): Promise<any> {\n      console.error('An error happened', error);\n      return Promise.reject(error.body || error);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}